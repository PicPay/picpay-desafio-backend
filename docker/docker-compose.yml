version: "3.8"
services:
  web_core:
    container_name: ${WEB_CORE_CONTAINER_NAME}
    build:
      context: ${WEB_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    networks:
      - backend_core
    ports:
      - "${WEB_CORE_HOST_HTTP_PORT}:${WEB_CONTAINER_HTTP_PORT}"
    volumes:
      - ${APPLICATION_CORE_HOST_PATH}:${APPLICATION_CORE_CONTAINER_PATH}
      - ${WEB_CORE_APACHE_HOST_LOG}:${APACHE_CONTAINER_LOG}
      - ${WEB_CORE_APACHE_HOST_SITES_AVAILABLE}:${APACHE_CONTAINER_SITES_AVAILABLE}
      - ${WEB_CORE_PHP_HOST_CONF}:${PHP_CONTAINER_CONF}
  web_wallet:
    container_name: ${WEB_WALLET_CONTAINER_NAME}
    build:
      context: ${WEB_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    networks:
      - backend_wallet
    ports:
      - "${WEB_WALLET_HOST_HTTP_PORT}:${WEB_CONTAINER_HTTP_PORT}"
    volumes:
      - ${APPLICATION_WALLET_HOST_PATH}:${APPLICATION_WALLET_CONTAINER_PATH}
      - ${WEB_WALLET_APACHE_HOST_LOG}:${APACHE_CONTAINER_LOG}
      - ${WEB_WALLET_APACHE_HOST_SITES_AVAILABLE}:${APACHE_CONTAINER_SITES_AVAILABLE}
      - ${WEB_WALLET_PHP_HOST_CONF}:${PHP_CONTAINER_CONF}
  web_transaction:
    container_name: ${WEB_TRANSACTION_CONTAINER_NAME}
    build:
      context: ${WEB_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    networks:
      - backend_transaction
    ports:
      - "${WEB_TRANSACTION_HOST_HTTP_PORT}:${WEB_CONTAINER_HTTP_PORT}"
    volumes:
      - ${APPLICATION_TRANSACTION_HOST_PATH}:${APPLICATION_TRANSACTION_CONTAINER_PATH}
      - ${WEB_TRANSACTION_APACHE_HOST_LOG}:${APACHE_CONTAINER_LOG}
      - ${WEB_TRANSACTION_APACHE_HOST_SITES_AVAILABLE}:${APACHE_CONTAINER_SITES_AVAILABLE}
      - ${WEB_TRANSACTION_PHP_HOST_CONF}:${PHP_CONTAINER_CONF}
  mysql_core:
    container_name: ${MYSQL_CORE_CONTAINER_NAME}
    build:
      context: ${MYSQL_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    networks:
      - backend_core
    restart: ${ALWAYS}
    ports:
      - "${MYSQL_CORE_HOST_HTTP_PORT}:${MYSQL_CONTAINER_HTTP_PORT}"
    volumes:
      - ${MYSQL_CORE_HOST_DATA}:${MYSQL_CONTAINER_DATA}
    environment:
      - MYSQL_DATABASE=${MYSQL_CORE_ENV_DATABASE}
      - MYSQL_USER=${MYSQL_ENV_USER}
      - MYSQL_PASSWORD=${MYSQL_ENV_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ENV_ROOT_PASSWORD}
  mysql_wallet:
    container_name: ${MYSQL_WALLET_CONTAINER_NAME}
    build:
      context: ${MYSQL_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    networks:
      - backend_wallet
    restart: ${ALWAYS}
    ports:
      - "${MYSQL_WALLET_HOST_HTTP_PORT}:${MYSQL_CONTAINER_HTTP_PORT}"
    volumes:
      - ${MYSQL_WALLET_HOST_DATA}:${MYSQL_CONTAINER_DATA}
    environment:
      - MYSQL_DATABASE=${MYSQL_WALLET_ENV_DATABASE}
      - MYSQL_USER=${MYSQL_ENV_USER}
      - MYSQL_PASSWORD=${MYSQL_ENV_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ENV_ROOT_PASSWORD}
  mysql_transaction:
    container_name: ${MYSQL_TRANSACTION_CONTAINER_NAME}
    build:
      context: ${MYSQL_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    networks:
      - backend_transaction
    restart: ${ALWAYS}
    ports:
      - "${MYSQL_TRANSACTION_HOST_HTTP_PORT}:${MYSQL_CONTAINER_HTTP_PORT}"
    volumes:
      - ${MYSQL_TRANSACTION_HOST_DATA}:${MYSQL_CONTAINER_DATA}
    environment:
      - MYSQL_DATABASE=${MYSQL_TRANSACTION_ENV_DATABASE}
      - MYSQL_USER=${MYSQL_ENV_USER}
      - MYSQL_PASSWORD=${MYSQL_ENV_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ENV_ROOT_PASSWORD}
  rabbitmq:
    container_name: ${RABBITMQ_CONTAINER_NAME}
    build:
      context: ${RABBITMQ_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    restart: ${ALWAYS}
    ports:
      - ${RABBITMQ_HOST_HTTP_PORT}:${RABBITMQ_CONTAINER_HTTP_PORT}
      - ${RABBITMQ_MANAGEMENT_HOST_HTTP_PORT}:${RABBITMQ_MANAGEMENT_CONTAINER_HTTP_PORT}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ${RABBITMQ_HOST_ETC}:${RABBITMQ_CONTAINER_ETC}
      - ${RABBITMQ_HOST_LOG}:${RABBITMQ_CONTAINER_LOG}
networks:
  backend_core:
  backend_wallet:
  backend_transaction:
